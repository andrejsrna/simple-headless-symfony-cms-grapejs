{% extends 'admin/base.html.twig' %}

{% block title %}External Images{% endblock %}

{% block admin_content %}
    <div class="space-y-6">
        <!-- Header -->
        <div class="flex items-center justify-between">
            <div>
                <h1 class="text-2xl font-semibold tracking-tight">External Image Gallery</h1>
                <p class="text-sm text-muted-foreground">Manage your S3-stored images.</p>
            </div>
            <button type="button" 
                    onclick="document.getElementById('uploadDialog').showModal()"
                    class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="me-2"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/><polyline points="17 8 12 3 7 8"/><line x1="12" x2="12" y1="3" y2="15"/></svg>
                Upload Image
            </button>
        </div>

        {% for label, messages in app.flashes %}
            {% for message in messages %}
                <div class="rounded-lg {{ label == 'success' ? 'bg-green-50 text-green-500' : 'bg-red-50 text-red-500' }} p-4 text-sm flex justify-between items-center" role="alert">
                    <span>{{ message }}</span>
                    <button type="button" class="{{ label == 'success' ? 'text-green-500 hover:text-green-600' : 'text-red-500 hover:text-red-600' }}" onclick="this.parentElement.remove()">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
                    </button>
                </div>
            {% endfor %}
        {% endfor %}

        <!-- Upload Dialog -->
        <dialog id="uploadDialog" class="rounded-lg shadow-lg p-0 backdrop:bg-black/50">
            <div class="w-full max-w-lg">
                <!-- Dialog Header -->
                <div class="flex items-center justify-between border-b p-4">
                    <h3 class="text-lg font-semibold">Upload Image</h3>
                    <button type="button" 
                            onclick="this.closest('dialog').close()"
                            class="rounded-full p-1 hover:bg-gray-100">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
                    </button>
                </div>

                <!-- Dialog Content -->
                <form action="{{ path('admin_external_images_upload') }}" method="post" enctype="multipart/form-data" class="p-4 space-y-4">
                    <div class="space-y-2">
                        <label for="file" class="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70">
                            Choose Image
                        </label>
                        <input type="file" 
                               id="file" 
                               name="file" 
                               accept="image/jpeg,image/png,image/webp"
                               required
                               class="flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50">
                        <p class="text-xs text-muted-foreground">
                            Supported formats: JPEG, PNG, WebP. Maximum size: 5MB.
                        </p>
                    </div>

                    <div class="flex justify-end gap-2 pt-4">
                        <button type="button" 
                                onclick="this.closest('dialog').close()"
                                class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2">
                            Cancel
                        </button>
                        <button type="submit"
                                class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="me-2"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/><polyline points="17 8 12 3 7 8"/><line x1="12" x2="12" y1="3" y2="15"/></svg>
                            Upload
                        </button>
                    </div>
                </form>
            </div>
        </dialog>

        <!-- Image Grid -->
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            {% for file in files %}
                <div class="group relative bg-white dark:bg-gray-800 rounded-lg border shadow-sm overflow-hidden">
                    <!-- Image Preview -->
                    <div class="aspect-square w-full overflow-hidden bg-gray-100 dark:bg-gray-900">
                        <img src="{{ file.url }}" 
                             alt="{{ file.key }}"
                             class="h-full w-full object-cover transition-transform duration-300 group-hover:scale-105 max-h-[200px]">
                    </div>

                    <!-- Image Info -->
                    <div class="p-4">
                        <h3 class="font-medium text-sm truncate" title="{{ file.key }}">
                            {{ file.key }}
                        </h3>
                        <div class="mt-1 space-y-1">
                            <p class="text-xs text-muted-foreground flex items-center gap-1">
                                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"/><polyline points="3.29 7 12 12 20.71 7"/><line x1="12" y1="22" x2="12" y2="12"/></svg>
                                <span>{{ (file.size / 1024)|round(2) }} KB</span>
                            </p>
                            <p class="text-xs text-muted-foreground flex items-center gap-1">
                                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/><polyline points="12 6 12 12 16 14"/></svg>
                                <span>{{ file.modified|date('M d, Y H:i') }}</span>
                            </p>
                        </div>

                        <!-- Alt Text Input -->
                        <div class="mt-3">
                            <label for="alt-{{ loop.index }}" class="block text-xs font-medium text-gray-700 dark:text-gray-300 mb-1">
                                Alt Text
                            </label>
                            <input type="text" 
                                   id="alt-{{ loop.index }}"
                                   class="w-full px-2 py-1 text-sm rounded-md border border-input bg-background focus:outline-none focus:ring-2 focus:ring-ring alt-text-input"
                                   value="{{ file.key }}"
                                   data-key="{{ file.key }}"
                                   placeholder="Enter alt text">
                        </div>
                    </div>

                    <!-- Actions -->
                    <div class="p-4 pt-0 flex items-center justify-between gap-2">
                        <a href="{{ file.url }}" 
                           target="_blank"
                           class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-9 px-3">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="me-2"><path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"/><polyline points="15 3 21 3 21 9"/><line x1="10" y1="14" x2="21" y2="3"/></svg>
                            View
                        </a>
                        <form action="{{ path('admin_external_images_delete', {'key': file.key}) }}" method="post" onsubmit="return confirm('Are you sure you want to delete this image?')">
                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ file.key) }}">
                            <button type="submit" 
                                    class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-destructive text-destructive-foreground hover:bg-destructive/90 h-9 px-3">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="me-2"><path d="M3 6h18"/><path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"/><path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"/></svg>
                                Delete
                            </button>
                        </form>
                    </div>
                </div>
            {% else %}
                <div class="col-span-full">
                    <div class="rounded-lg border border-dashed p-12 text-center">
                        <div class="mx-auto flex max-w-[420px] flex-col items-center justify-center">
                            <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-muted-foreground mb-4"><rect width="18" height="18" x="3" y="3" rx="2" ry="2"/><circle cx="9" cy="9" r="2"/><path d="m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21"/></svg>
                            <h3 class="text-lg font-semibold">No images found</h3>
                            <p class="text-sm text-muted-foreground mt-2">
                                Upload images using the button above.
                            </p>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>

        <!-- Pagination -->
        {% if files|length > 0 %}
            <div class="mt-6 flex justify-center">
                <div class="flex gap-2">
                    {% if currentPage > 1 %}
                        <a href="{{ path('admin_external_images_index', {page: currentPage - 1}) }}" 
                           class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2">
                            Previous
                        </a>
                    {% endif %}
                    
                    {% if hasMore %}
                        <a href="{{ path('admin_external_images_index', {page: currentPage + 1, startAfter: nextStartAfter}) }}" 
                           class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2">
                            Next
                        </a>
                    {% endif %}
                </div>
            </div>
        {% endif %}
    </div>

    {% block javascripts %}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const altInputs = document.querySelectorAll('.alt-text-input');
            let updateTimeout;

            altInputs.forEach(input => {
                input.addEventListener('input', function() {
                    clearTimeout(updateTimeout);
                    const key = this.dataset.key;
                    const altText = this.value;
                    const input = this;

                    updateTimeout = setTimeout(() => {
                        fetch(`{{ path('admin_external_images_index') }}update-alt/${key}`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded',
                            },
                            body: `altText=${encodeURIComponent(altText)}`
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                input.classList.add('is-valid');
                                setTimeout(() => input.classList.remove('is-valid'), 2000);
                            }
                        })
                        .catch(error => {
                            input.classList.add('is-invalid');
                            setTimeout(() => input.classList.remove('is-invalid'), 2000);
                        });
                    }, 500);
                });
            });
        });
    </script>
    {% endblock %}
{% endblock %} 